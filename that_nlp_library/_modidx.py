# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/that-nlp-library',
                'doc_host': 'https://anhquan0412.github.io',
                'git_url': 'https://github.com/anhquan0412/that-nlp-library',
                'lib_path': 'that_nlp_library'},
  'syms': { 'that_nlp_library.evaluations': { 'that_nlp_library.evaluations._show_metrics': ( 'evaluations.html#_show_metrics',
                                                                                              'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.evaluate_classification_model': ( 'evaluations.html#evaluate_classification_model',
                                                                                                              'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.evaluate_classification_model_metadata': ( 'evaluations.html#evaluate_classification_model_metadata',
                                                                                                                       'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.show_top_n_predictions': ( 'evaluations.html#show_top_n_predictions',
                                                                                                       'that_nlp_library/evaluations.py')},
            'that_nlp_library.model_main': { 'that_nlp_library.model_main.ModelController': ( 'model_main.html#modelcontroller',
                                                                                              'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.__init__': ( 'model_main.html#modelcontroller.__init__',
                                                                                                       'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.fit': ( 'model_main.html#modelcontroller.fit',
                                                                                                  'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.predict_ddict': ( 'model_main.html#modelcontroller.predict_ddict',
                                                                                                            'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.predict_raw_dset': ( 'model_main.html#modelcontroller.predict_raw_dset',
                                                                                                               'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.predict_raw_text': ( 'model_main.html#modelcontroller.predict_raw_text',
                                                                                                               'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main._convert_pred_id_to_label': ( 'model_main.html#_convert_pred_id_to_label',
                                                                                                        'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main._forward_pass_prediction': ( 'model_main.html#_forward_pass_prediction',
                                                                                                       'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.compute_metrics': ( 'model_main.html#compute_metrics',
                                                                                              'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.compute_metrics_separate_heads': ( 'model_main.html#compute_metrics_separate_heads',
                                                                                                             'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.finetune': ( 'model_main.html#finetune',
                                                                                       'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.loss_for_classification': ( 'model_main.html#loss_for_classification',
                                                                                                      'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.model_init_classification': ( 'model_main.html#model_init_classification',
                                                                                                        'that_nlp_library/model_main.py')},
            'that_nlp_library.models.gpt2.classifiers': { 'that_nlp_library.models.gpt2.classifiers.GPT2BaseForSequenceClassification': ( 'models.gpt2.classifiers.html#gpt2baseforsequenceclassification',
                                                                                                                                          'that_nlp_library/models/gpt2/classifiers.py'),
                                                          'that_nlp_library.models.gpt2.classifiers.GPT2BaseForSequenceClassification.__init__': ( 'models.gpt2.classifiers.html#gpt2baseforsequenceclassification.__init__',
                                                                                                                                                   'that_nlp_library/models/gpt2/classifiers.py'),
                                                          'that_nlp_library.models.gpt2.classifiers.GPT2BaseForSequenceClassification.forward': ( 'models.gpt2.classifiers.html#gpt2baseforsequenceclassification.forward',
                                                                                                                                                  'that_nlp_library/models/gpt2/classifiers.py'),
                                                          'that_nlp_library.models.gpt2.classifiers.GPT2HiddenStateConcatForSequenceClassification': ( 'models.gpt2.classifiers.html#gpt2hiddenstateconcatforsequenceclassification',
                                                                                                                                                       'that_nlp_library/models/gpt2/classifiers.py'),
                                                          'that_nlp_library.models.gpt2.classifiers.GPT2HiddenStateConcatForSequenceClassification.__init__': ( 'models.gpt2.classifiers.html#gpt2hiddenstateconcatforsequenceclassification.__init__',
                                                                                                                                                                'that_nlp_library/models/gpt2/classifiers.py'),
                                                          'that_nlp_library.models.gpt2.classifiers.GPT2HiddenStateConcatForSequenceClassification.forward': ( 'models.gpt2.classifiers.html#gpt2hiddenstateconcatforsequenceclassification.forward',
                                                                                                                                                               'that_nlp_library/models/gpt2/classifiers.py')},
            'that_nlp_library.models.roberta.classifiers': { 'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended': ( 'models.roberta.classifiers.html#concatheadextended',
                                                                                                                                 'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended.__init__': ( 'models.roberta.classifiers.html#concatheadextended.__init__',
                                                                                                                                          'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended.forward': ( 'models.roberta.classifiers.html#concatheadextended.forward',
                                                                                                                                         'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple': ( 'models.roberta.classifiers.html#concatheadsimple',
                                                                                                                               'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple.__init__': ( 'models.roberta.classifiers.html#concatheadsimple.__init__',
                                                                                                                                        'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple.forward': ( 'models.roberta.classifiers.html#concatheadsimple.forward',
                                                                                                                                       'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification',
                                                                                                                                                   'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification.__init__': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification.__init__',
                                                                                                                                                            'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification.forward': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification.forward',
                                                                                                                                                           'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom',
                                                                                                                                              'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom.__init__': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom.__init__',
                                                                                                                                                       'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom.forward': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom.forward',
                                                                                                                                                      'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification',
                                                                                                                                                                'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification.__init__': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification.__init__',
                                                                                                                                                                         'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification.forward': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification.forward',
                                                                                                                                                                        'that_nlp_library/models/roberta/classifiers.py')},
            'that_nlp_library.models.roberta.conditional_prob_classifiers': { 'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification',
                                                                                                                                                                                      'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification.__init__': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification.__init__',
                                                                                                                                                                                               'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification.forward': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification.forward',
                                                                                                                                                                                              'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.build_standard_condition_mask': ( 'models.roberta.conditional_prob_classifiers.html#build_standard_condition_mask',
                                                                                                                                                                              'that_nlp_library/models/roberta/conditional_prob_classifiers.py')},
            'that_nlp_library.models.roberta.deep_hierarchical_classifiers': { 'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot',
                                                                                                                                                                           'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot.__init__',
                                                                                                                                                                                    'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot.forward',
                                                                                                                                                                                   'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification',
                                                                                                                                                                                      'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification.__init__',
                                                                                                                                                                                               'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification.forward',
                                                                                                                                                                                              'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification',
                                                                                                                                                                                            'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification.__init__',
                                                                                                                                                                                                     'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification.forward',
                                                                                                                                                                                                    'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers._check_hierarchy': ( 'models.roberta.deep_hierarchical_classifiers.html#_check_hierarchy',
                                                                                                                                                                   'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.build_DHC_conditional_mask': ( 'models.roberta.deep_hierarchical_classifiers.html#build_dhc_conditional_mask',
                                                                                                                                                                             'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.loss_for_DHC': ( 'models.roberta.deep_hierarchical_classifiers.html#loss_for_dhc',
                                                                                                                                                               'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py')},
            'that_nlp_library.text_augmentation': { 'that_nlp_library.text_augmentation.fill_mask_augmentation': ( 'text_augmentation.html#fill_mask_augmentation',
                                                                                                                   'that_nlp_library/text_augmentation.py'),
                                                    'that_nlp_library.text_augmentation.remove_vnmese_accent': ( 'text_augmentation.html#remove_vnmese_accent',
                                                                                                                 'that_nlp_library/text_augmentation.py')},
            'that_nlp_library.text_main': { 'that_nlp_library.text_main.TextDataController': ( 'text_main.html#textdatacontroller',
                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.__init__': ( 'text_main.html#textdatacontroller.__init__',
                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._check_sup_types': ( 'text_main.html#textdatacontroller._check_sup_types',
                                                                                                                'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._check_validation_leaking': ( 'text_main.html#textdatacontroller._check_validation_leaking',
                                                                                                                         'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._convert_regression_to_float': ( 'text_main.html#textdatacontroller._convert_regression_to_float',
                                                                                                                            'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._create_label_mapping_func': ( 'text_main.html#textdatacontroller._create_label_mapping_func',
                                                                                                                          'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._determine_multihead_multilabel': ( 'text_main.html#textdatacontroller._determine_multihead_multilabel',
                                                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._determine_val_key': ( 'text_main.html#textdatacontroller._determine_val_key',
                                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._do_augmentation': ( 'text_main.html#textdatacontroller._do_augmentation',
                                                                                                                'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._do_filtering': ( 'text_main.html#textdatacontroller._do_filtering',
                                                                                                             'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._do_label_transformation': ( 'text_main.html#textdatacontroller._do_label_transformation',
                                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._do_train_shuffling': ( 'text_main.html#textdatacontroller._do_train_shuffling',
                                                                                                                   'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._do_transformation': ( 'text_main.html#textdatacontroller._do_transformation',
                                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._encode_labels': ( 'text_main.html#textdatacontroller._encode_labels',
                                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._process_metadatas': ( 'text_main.html#textdatacontroller._process_metadatas',
                                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._simplify_ddict': ( 'text_main.html#textdatacontroller._simplify_ddict',
                                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._train_test_split': ( 'text_main.html#textdatacontroller._train_test_split',
                                                                                                                 'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController._upsampling': ( 'text_main.html#textdatacontroller._upsampling',
                                                                                                           'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.do_all_preprocessing': ( 'text_main.html#textdatacontroller.do_all_preprocessing',
                                                                                                                    'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.do_tokenization': ( 'text_main.html#textdatacontroller.do_tokenization',
                                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.from_csv': ( 'text_main.html#textdatacontroller.from_csv',
                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.from_df': ( 'text_main.html#textdatacontroller.from_df',
                                                                                                       'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.from_pickle': ( 'text_main.html#textdatacontroller.from_pickle',
                                                                                                           'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.prepare_test_dataset': ( 'text_main.html#textdatacontroller.prepare_test_dataset',
                                                                                                                    'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.prepare_test_dataset_from_csv': ( 'text_main.html#textdatacontroller.prepare_test_dataset_from_csv',
                                                                                                                             'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.prepare_test_dataset_from_df': ( 'text_main.html#textdatacontroller.prepare_test_dataset_from_df',
                                                                                                                            'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.prepare_test_dataset_from_raws': ( 'text_main.html#textdatacontroller.prepare_test_dataset_from_raws',
                                                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.process_and_tokenize': ( 'text_main.html#textdatacontroller.process_and_tokenize',
                                                                                                                    'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.save_as_pickles': ( 'text_main.html#textdatacontroller.save_as_pickles',
                                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.set_data_collator': ( 'text_main.html#textdatacontroller.set_data_collator',
                                                                                                                 'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.set_verbose': ( 'text_main.html#textdatacontroller.set_verbose',
                                                                                                           'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataController.validate_input': ( 'text_main.html#textdatacontroller.validate_input',
                                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.concat_metadatas': ( 'text_main.html#concat_metadatas',
                                                                                             'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.tokenize_function': ( 'text_main.html#tokenize_function',
                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.tokenizer_explain': ( 'text_main.html#tokenizer_explain',
                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.two_steps_tokenization_explain': ( 'text_main.html#two_steps_tokenization_explain',
                                                                                                           'that_nlp_library/text_main.py')},
            'that_nlp_library.text_main_lm': { 'that_nlp_library.text_main_lm.TextDataLMController': ( 'text_main_lm.html#textdatalmcontroller',
                                                                                                       'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.__init__': ( 'text_main_lm.html#textdatalmcontroller.__init__',
                                                                                                                'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._do_augmentation': ( 'text_main_lm.html#textdatalmcontroller._do_augmentation',
                                                                                                                        'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._do_label_transformation': ( 'text_main_lm.html#textdatalmcontroller._do_label_transformation',
                                                                                                                                'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._do_train_shuffling': ( 'text_main_lm.html#textdatalmcontroller._do_train_shuffling',
                                                                                                                           'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._encode_labels': ( 'text_main_lm.html#textdatalmcontroller._encode_labels',
                                                                                                                      'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._group_texts_with_stride': ( 'text_main_lm.html#textdatalmcontroller._group_texts_with_stride',
                                                                                                                                'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController._upsampling': ( 'text_main_lm.html#textdatalmcontroller._upsampling',
                                                                                                                   'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.do_all_preprocessing': ( 'text_main_lm.html#textdatalmcontroller.do_all_preprocessing',
                                                                                                                            'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.do_tokenization': ( 'text_main_lm.html#textdatalmcontroller.do_tokenization',
                                                                                                                       'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.prepare_test_dataset': ( 'text_main_lm.html#textdatalmcontroller.prepare_test_dataset',
                                                                                                                            'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.process_and_tokenize': ( 'text_main_lm.html#textdatalmcontroller.process_and_tokenize',
                                                                                                                            'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.save_as_pickles': ( 'text_main_lm.html#textdatalmcontroller.save_as_pickles',
                                                                                                                       'that_nlp_library/text_main_lm.py'),
                                               'that_nlp_library.text_main_lm.TextDataLMController.set_data_collator': ( 'text_main_lm.html#textdatalmcontroller.set_data_collator',
                                                                                                                         'that_nlp_library/text_main_lm.py')},
            'that_nlp_library.text_main_lm_streaming': { 'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming',
                                                                                                                                    'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming.__init__': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming.__init__',
                                                                                                                                             'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._construct_generator_with_batch': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._construct_generator_with_batch',
                                                                                                                                                                    'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._do_label_transformation': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._do_label_transformation',
                                                                                                                                                             'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._do_transformation_augmentation_tokenization': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._do_transformation_augmentation_tokenization',
                                                                                                                                                                                 'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._do_transformation_tokenization': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._do_transformation_tokenization',
                                                                                                                                                                    'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._do_transformation_tokenization_generator': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._do_transformation_tokenization_generator',
                                                                                                                                                                              'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._encode_labels': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._encode_labels',
                                                                                                                                                   'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming._group_texts_with_stride': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming._group_texts_with_stride',
                                                                                                                                                             'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming.prepare_test_dataset': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming.prepare_test_dataset',
                                                                                                                                                         'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming.process_and_tokenize': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming.process_and_tokenize',
                                                                                                                                                         'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming.save_as_pickles': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming.save_as_pickles',
                                                                                                                                                    'that_nlp_library/text_main_lm_streaming.py'),
                                                         'that_nlp_library.text_main_lm_streaming.TextDataLMControllerStreaming.set_data_collator': ( 'text_main_lm_streaming.html#textdatalmcontrollerstreaming.set_data_collator',
                                                                                                                                                      'that_nlp_library/text_main_lm_streaming.py')},
            'that_nlp_library.text_main_streaming': { 'that_nlp_library.text_main_streaming.TextDataControllerStreaming': ( 'text_main_streaming.html#textdatacontrollerstreaming',
                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.__init__': ( 'text_main_streaming.html#textdatacontrollerstreaming.__init__',
                                                                                                                                     'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._check_sup_types': ( 'text_main_streaming.html#textdatacontrollerstreaming._check_sup_types',
                                                                                                                                             'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._construct_generator_with_batch': ( 'text_main_streaming.html#textdatacontrollerstreaming._construct_generator_with_batch',
                                                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._convert_regression_to_float': ( 'text_main_streaming.html#textdatacontrollerstreaming._convert_regression_to_float',
                                                                                                                                                         'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._create_label_mapping_func': ( 'text_main_streaming.html#textdatacontrollerstreaming._create_label_mapping_func',
                                                                                                                                                       'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._determine_multihead_multilabel': ( 'text_main_streaming.html#textdatacontrollerstreaming._determine_multihead_multilabel',
                                                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_filtering': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_filtering',
                                                                                                                                          'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_label_transformation': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_label_transformation',
                                                                                                                                                     'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_transformation_augmentation_tokenization': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_transformation_augmentation_tokenization',
                                                                                                                                                                         'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_transformation_augmentation_tokenization_generator': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_transformation_augmentation_tokenization_generator',
                                                                                                                                                                                   'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_transformation_augmentation_tokenization_generator_linebyline': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_transformation_augmentation_tokenization_generator_linebyline',
                                                                                                                                                                                              'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._do_transformation_tokenization': ( 'text_main_streaming.html#textdatacontrollerstreaming._do_transformation_tokenization',
                                                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._encode_labels': ( 'text_main_streaming.html#textdatacontrollerstreaming._encode_labels',
                                                                                                                                           'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._process_metadatas': ( 'text_main_streaming.html#textdatacontrollerstreaming._process_metadatas',
                                                                                                                                               'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming._simplify_ddict': ( 'text_main_streaming.html#textdatacontrollerstreaming._simplify_ddict',
                                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.from_pickle': ( 'text_main_streaming.html#textdatacontrollerstreaming.from_pickle',
                                                                                                                                        'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.prepare_test_dataset': ( 'text_main_streaming.html#textdatacontrollerstreaming.prepare_test_dataset',
                                                                                                                                                 'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.prepare_test_dataset_from_csv': ( 'text_main_streaming.html#textdatacontrollerstreaming.prepare_test_dataset_from_csv',
                                                                                                                                                          'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.prepare_test_dataset_from_df': ( 'text_main_streaming.html#textdatacontrollerstreaming.prepare_test_dataset_from_df',
                                                                                                                                                         'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.prepare_test_dataset_from_raws': ( 'text_main_streaming.html#textdatacontrollerstreaming.prepare_test_dataset_from_raws',
                                                                                                                                                           'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.process_and_tokenize': ( 'text_main_streaming.html#textdatacontrollerstreaming.process_and_tokenize',
                                                                                                                                                 'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.save_as_pickles': ( 'text_main_streaming.html#textdatacontrollerstreaming.save_as_pickles',
                                                                                                                                            'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.set_data_collator': ( 'text_main_streaming.html#textdatacontrollerstreaming.set_data_collator',
                                                                                                                                              'that_nlp_library/text_main_streaming.py'),
                                                      'that_nlp_library.text_main_streaming.TextDataControllerStreaming.set_verbose': ( 'text_main_streaming.html#textdatacontrollerstreaming.set_verbose',
                                                                                                                                        'that_nlp_library/text_main_streaming.py')},
            'that_nlp_library.text_transformation': { 'that_nlp_library.text_transformation.apply_vnmese_word_tokenize': ( 'text_transformation.html#apply_vnmese_word_tokenize',
                                                                                                                           'that_nlp_library/text_transformation.py')},
            'that_nlp_library.utils': { 'that_nlp_library.utils.HiddenPrints': ('utils.html#hiddenprints', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.HiddenPrints.__enter__': ( 'utils.html#hiddenprints.__enter__',
                                                                                           'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.HiddenPrints.__exit__': ( 'utils.html#hiddenprints.__exit__',
                                                                                          'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.augmentation_stream_generator': ( 'utils.html#augmentation_stream_generator',
                                                                                                  'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.callable_name': ('utils.html#callable_name', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_and_get_attribute': ( 'utils.html#check_and_get_attribute',
                                                                                            'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_input_validation': ( 'utils.html#check_input_validation',
                                                                                           'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_text_leaking': ( 'utils.html#check_text_leaking',
                                                                                       'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.create_dir': ('utils.html#create_dir', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.func_all': ('utils.html#func_all', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.get_dset_col_names': ( 'utils.html#get_dset_col_names',
                                                                                       'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.hf_filter_dset': ('utils.html#hf_filter_dset', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.hf_map_dset': ('utils.html#hf_map_dset', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.lambda_batch': ('utils.html#lambda_batch', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.lambda_map_batch': ( 'utils.html#lambda_map_batch',
                                                                                     'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.load_pickle': ('utils.html#load_pickle', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.none2emptystr': ('utils.html#none2emptystr', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.print_msg': ('utils.html#print_msg', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.save_to_pickle': ('utils.html#save_to_pickle', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.seed_everything': ( 'utils.html#seed_everything',
                                                                                    'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.seed_notorch': ('utils.html#seed_notorch', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.sigmoid': ('utils.html#sigmoid', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.val2iterable': ('utils.html#val2iterable', 'that_nlp_library/utils.py')}}}
