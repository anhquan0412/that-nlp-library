# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/that-nlp-library',
                'doc_host': 'https://anhquan0412.github.io',
                'git_url': 'https://github.com/anhquan0412/that-nlp-library',
                'lib_path': 'that_nlp_library'},
  'syms': { 'that_nlp_library.evaluations': { 'that_nlp_library.evaluations._show_metrics': ( 'evaluations.html#_show_metrics',
                                                                                              'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.evaluate_classification_model': ( 'evaluations.html#evaluate_classification_model',
                                                                                                              'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.evaluate_classification_model_metadata': ( 'evaluations.html#evaluate_classification_model_metadata',
                                                                                                                       'that_nlp_library/evaluations.py'),
                                              'that_nlp_library.evaluations.show_top_n_predictions': ( 'evaluations.html#show_top_n_predictions',
                                                                                                       'that_nlp_library/evaluations.py')},
            'that_nlp_library.model_main': { 'that_nlp_library.model_main.ModelController': ( 'model_main.html#modelcontroller',
                                                                                              'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.__init__': ( 'model_main.html#modelcontroller.__init__',
                                                                                                       'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.fit': ( 'model_main.html#modelcontroller.fit',
                                                                                                  'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.predict_ddict': ( 'model_main.html#modelcontroller.predict_ddict',
                                                                                                            'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.ModelController.predict_raw_text': ( 'model_main.html#modelcontroller.predict_raw_text',
                                                                                                               'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main._forward_pass_for_predictions': ( 'model_main.html#_forward_pass_for_predictions',
                                                                                                            'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.compute_metrics_classification': ( 'model_main.html#compute_metrics_classification',
                                                                                                             'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.compute_metrics_separate_singleheads': ( 'model_main.html#compute_metrics_separate_singleheads',
                                                                                                                   'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.finetune': ( 'model_main.html#finetune',
                                                                                       'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.loss_for_classification': ( 'model_main.html#loss_for_classification',
                                                                                                      'that_nlp_library/model_main.py'),
                                             'that_nlp_library.model_main.model_init_classification': ( 'model_main.html#model_init_classification',
                                                                                                        'that_nlp_library/model_main.py')},
            'that_nlp_library.models.roberta.classifiers': { 'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended': ( 'models.roberta.classifiers.html#concatheadextended',
                                                                                                                                 'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended.__init__': ( 'models.roberta.classifiers.html#concatheadextended.__init__',
                                                                                                                                          'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadExtended.forward': ( 'models.roberta.classifiers.html#concatheadextended.forward',
                                                                                                                                         'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple': ( 'models.roberta.classifiers.html#concatheadsimple',
                                                                                                                               'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple.__init__': ( 'models.roberta.classifiers.html#concatheadsimple.__init__',
                                                                                                                                        'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.ConcatHeadSimple.forward': ( 'models.roberta.classifiers.html#concatheadsimple.forward',
                                                                                                                                       'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification',
                                                                                                                                                   'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification.__init__': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification.__init__',
                                                                                                                                                            'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaBaseForSequenceClassification.forward': ( 'models.roberta.classifiers.html#robertabaseforsequenceclassification.forward',
                                                                                                                                                           'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom',
                                                                                                                                              'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom.__init__': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom.__init__',
                                                                                                                                                       'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaClassificationHeadCustom.forward': ( 'models.roberta.classifiers.html#robertaclassificationheadcustom.forward',
                                                                                                                                                      'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification',
                                                                                                                                                                'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification.__init__': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification.__init__',
                                                                                                                                                                         'that_nlp_library/models/roberta/classifiers.py'),
                                                             'that_nlp_library.models.roberta.classifiers.RobertaHiddenStateConcatForSequenceClassification.forward': ( 'models.roberta.classifiers.html#robertahiddenstateconcatforsequenceclassification.forward',
                                                                                                                                                                        'that_nlp_library/models/roberta/classifiers.py')},
            'that_nlp_library.models.roberta.conditional_prob_classifiers': { 'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification',
                                                                                                                                                                                      'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification.__init__': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification.__init__',
                                                                                                                                                                                               'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.RobertaHSCCProbSequenceClassification.forward': ( 'models.roberta.conditional_prob_classifiers.html#robertahsccprobsequenceclassification.forward',
                                                                                                                                                                                              'that_nlp_library/models/roberta/conditional_prob_classifiers.py'),
                                                                              'that_nlp_library.models.roberta.conditional_prob_classifiers.build_standard_condition_mask': ( 'models.roberta.conditional_prob_classifiers.html#build_standard_condition_mask',
                                                                                                                                                                              'that_nlp_library/models/roberta/conditional_prob_classifiers.py')},
            'that_nlp_library.models.roberta.deep_hierarchical_classifiers': { 'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot',
                                                                                                                                                                           'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot.__init__',
                                                                                                                                                                                    'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaConcatHeadDHCRoot.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertaconcatheaddhcroot.forward',
                                                                                                                                                                                   'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification',
                                                                                                                                                                                      'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification.__init__',
                                                                                                                                                                                               'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaHSCDHCSequenceClassification.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertahscdhcsequenceclassification.forward',
                                                                                                                                                                                              'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification',
                                                                                                                                                                                            'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification.__init__': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification.__init__',
                                                                                                                                                                                                     'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.RobertaSimpleHSCDHCSequenceClassification.forward': ( 'models.roberta.deep_hierarchical_classifiers.html#robertasimplehscdhcsequenceclassification.forward',
                                                                                                                                                                                                    'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers._check_hierarchy': ( 'models.roberta.deep_hierarchical_classifiers.html#_check_hierarchy',
                                                                                                                                                                   'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.build_DHC_conditional_mask': ( 'models.roberta.deep_hierarchical_classifiers.html#build_dhc_conditional_mask',
                                                                                                                                                                             'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py'),
                                                                               'that_nlp_library.models.roberta.deep_hierarchical_classifiers.loss_for_DHC': ( 'models.roberta.deep_hierarchical_classifiers.html#loss_for_dhc',
                                                                                                                                                               'that_nlp_library/models/roberta/deep_hierarchical_classifiers.py')},
            'that_nlp_library.text_augmentation': { 'that_nlp_library.text_augmentation.fill_mask_augmentation': ( 'text_augmentation.html#fill_mask_augmentation',
                                                                                                                   'that_nlp_library/text_augmentation.py'),
                                                    'that_nlp_library.text_augmentation.remove_vnmese_accent': ( 'text_augmentation.html#remove_vnmese_accent',
                                                                                                                 'that_nlp_library/text_augmentation.py')},
            'that_nlp_library.text_main': { 'that_nlp_library.text_main.TextDataMain': ( 'text_main[deprecated].html#textdatamain',
                                                                                         'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.__init__': ( 'text_main[deprecated].html#textdatamain.__init__',
                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._check_validation_leaking': ( 'text_main[deprecated].html#textdatamain._check_validation_leaking',
                                                                                                                   'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._do_augmentation': ( 'text_main[deprecated].html#textdatamain._do_augmentation',
                                                                                                          'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._do_transformation': ( 'text_main[deprecated].html#textdatamain._do_transformation',
                                                                                                            'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._encode_labels': ( 'text_main[deprecated].html#textdatamain._encode_labels',
                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._main_text_processing': ( 'text_main[deprecated].html#textdatamain._main_text_processing',
                                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._process_metadatas': ( 'text_main[deprecated].html#textdatamain._process_metadatas',
                                                                                                            'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._simplify_df': ( 'text_main[deprecated].html#textdatamain._simplify_df',
                                                                                                      'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain._train_test_split': ( 'text_main[deprecated].html#textdatamain._train_test_split',
                                                                                                           'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.from_csv': ( 'text_main[deprecated].html#textdatamain.from_csv',
                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.from_gsheet': ( 'text_main[deprecated].html#textdatamain.from_gsheet',
                                                                                                     'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.from_pickle': ( 'text_main[deprecated].html#textdatamain.from_pickle',
                                                                                                     'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.get_test_datasetdict_from_csv': ( 'text_main[deprecated].html#textdatamain.get_test_datasetdict_from_csv',
                                                                                                                       'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.get_test_datasetdict_from_df': ( 'text_main[deprecated].html#textdatamain.get_test_datasetdict_from_df',
                                                                                                                      'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.get_test_datasetdict_from_dict': ( 'text_main[deprecated].html#textdatamain.get_test_datasetdict_from_dict',
                                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.save_as_pickles': ( 'text_main[deprecated].html#textdatamain.save_as_pickles',
                                                                                                         'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.save_train_data_after_processing': ( 'text_main[deprecated].html#textdatamain.save_train_data_after_processing',
                                                                                                                          'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.set_data_collator': ( 'text_main[deprecated].html#textdatamain.set_data_collator',
                                                                                                           'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.to_datasetdict': ( 'text_main[deprecated].html#textdatamain.to_datasetdict',
                                                                                                        'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.to_df': ( 'text_main[deprecated].html#textdatamain.to_df',
                                                                                               'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.TextDataMain.tokenizer_explain_single': ( 'text_main[deprecated].html#textdatamain.tokenizer_explain_single',
                                                                                                                  'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.datasetdictize_given_idxs': ( 'text_main[deprecated].html#datasetdictize_given_idxs',
                                                                                                      'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.tokenize_function': ( 'text_main[deprecated].html#tokenize_function',
                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.tokenizer_explain': ( 'text_main[deprecated].html#tokenizer_explain',
                                                                                              'that_nlp_library/text_main.py'),
                                            'that_nlp_library.text_main.two_steps_tokenization_explain': ( 'text_main[deprecated].html#two_steps_tokenization_explain',
                                                                                                           'that_nlp_library/text_main.py')},
            'that_nlp_library.text_transformation': { 'that_nlp_library.text_transformation.apply_vnmese_word_tokenize': ( 'text_transformation.html#apply_vnmese_word_tokenize',
                                                                                                                           'that_nlp_library/text_transformation.py')},
            'that_nlp_library.utils': { 'that_nlp_library.utils.HiddenPrints': ('utils.html#hiddenprints', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.HiddenPrints.__enter__': ( 'utils.html#hiddenprints.__enter__',
                                                                                           'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.HiddenPrints.__exit__': ( 'utils.html#hiddenprints.__exit__',
                                                                                          'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.augmentation_helper': ( 'utils.html#augmentation_helper',
                                                                                        'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.augmentation_stream_generator': ( 'utils.html#augmentation_stream_generator',
                                                                                                  'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.callable_name': ('utils.html#callable_name', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_and_get_attribute': ( 'utils.html#check_and_get_attribute',
                                                                                            'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_input_validation': ( 'utils.html#check_input_validation',
                                                                                           'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.check_text_leaking': ( 'utils.html#check_text_leaking',
                                                                                       'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.create_dir': ('utils.html#create_dir', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.func_all': ('utils.html#func_all', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.lambda_batch': ('utils.html#lambda_batch', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.lambda_map_batch': ( 'utils.html#lambda_map_batch',
                                                                                     'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.load_pickle': ('utils.html#load_pickle', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.none2emptystr': ('utils.html#none2emptystr', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.print_msg': ('utils.html#print_msg', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.save_to_pickle': ('utils.html#save_to_pickle', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.seed_everything': ( 'utils.html#seed_everything',
                                                                                    'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.seed_notorch': ('utils.html#seed_notorch', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.sigmoid': ('utils.html#sigmoid', 'that_nlp_library/utils.py'),
                                        'that_nlp_library.utils.val2iterable': ('utils.html#val2iterable', 'that_nlp_library/utils.py')}}}
